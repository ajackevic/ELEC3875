% This function utilises gf_mul for the AES inv_mix_column operation
function outputArray = inv_mix_column(inputArray)
    outputArray = [];

    %{
    MDS_matrix = ...
                [0E, 0B, 0D, 09];
                [09, 0E, 0B, 0D];
                [0D, 09, 0E, 0B];
                [0B, 0D, 09, 0E];

    These constants are used for XOR operation with gf_mul output values
    %}

    % For loop which goes thorugh each column [visualised 4x4 input matrix]
    for i = 0:3
        % Multiplication and addition in GF(2^8)

        row_01 = bitxor(...
                       bitxor(gf_mul(inputArray((i*4)+1),'0E'),gf_mul(inputArray((i*4)+2),'0B')),...
                       bitxor(gf_mul(inputArray((i*4)+3),'0D'),gf_mul(inputArray((i*4)+4),'09'))...
                       );
        row_02 = bitxor(...
                       bitxor(gf_mul(inputArray((i*4)+1),'09'),gf_mul(inputArray((i*4)+2),'0E')),...
                       bitxor(gf_mul(inputArray((i*4)+3),'0B'),gf_mul(inputArray((i*4)+4),'0D'))...
                       );
        row_03 = bitxor(...
                       bitxor(gf_mul(inputArray((i*4)+1),'0D'),gf_mul(inputArray((i*4)+2),'09')),...
                       bitxor(gf_mul(inputArray((i*4)+3),'0E'),gf_mul(inputArray((i*4)+4),'0B'))...
                       );
        row_04 = bitxor(...
                       bitxor(gf_mul(inputArray((i*4)+1),'0B'),gf_mul(inputArray((i*4)+2),'0D')),...
                       bitxor(gf_mul(inputArray((i*4)+3),'09'),gf_mul(inputArray((i*4)+4),'0E'))...
                       );
        outputArray = [outputArray; dec2hex(row_01,2); dec2hex(row_02,2); dec2hex(row_03,2); dec2hex(row_04,2)];
    end
    outputArray = string(outputArray);
end
